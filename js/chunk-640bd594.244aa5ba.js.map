{"version":3,"sources":["webpack:///./src/pages/Posts.vue?0b6b","webpack:///src/pages/Posts.vue","webpack:///./src/pages/Posts.vue?806e","webpack:///./src/pages/Posts.vue","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_l","post","key","id","attrs","title","_v","_s","body","staticRenderFns","data","posts","beforeCreate","$axios","get","then","component","normalizeComponent","scriptExports","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","concat","exports"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,SAASN,EAAIO,GAAIP,EAAS,OAAE,SAASQ,GAAM,OAAOJ,EAAG,SAAS,CAACK,IAAID,EAAKE,GAAGC,MAAM,CAAC,MAAQH,EAAKI,MAAM,YAAY,kBAAkB,CAACR,EAAG,cAAc,CAACJ,EAAIa,GAAG,IAAIb,EAAIc,GAAGN,EAAKO,MAAM,OAAOX,EAAG,SAAS,CAACE,YAAY,YAAYK,MAAM,CAAC,GAAM,QAAWH,EAAO,KAAK,CAACR,EAAIa,GAAG,mBAAmB,MAAK,IACrZG,EAAkB,GCiBtB,GACEC,KADF,WAEI,MAAO,CACLC,MAAO,KAGXC,aANF,WAMA,WACIlB,KAAKmB,OAAOC,IAAI,SAASC,MAAK,SAAlC,GACM,EAAN,kBC1B+U,I,YCO3UC,EAAY,eACd,EACAxB,EACAiB,GACA,EACA,KACA,KACA,MAIa,aAAAO,E,2CCZA,SAASC,EACtBC,EACA1B,EACAiB,EACAU,EACAC,EACAC,EACAC,EACAC,GAGA,IAqBIC,EArBAC,EAAmC,oBAAlBP,EACjBA,EAAcO,QACdP,EAiDJ,GA9CI1B,IACFiC,EAAQjC,OAASA,EACjBiC,EAAQhB,gBAAkBA,EAC1BgB,EAAQC,WAAY,GAIlBP,IACFM,EAAQE,YAAa,GAInBN,IACFI,EAAQG,SAAW,UAAYP,GAI7BC,GACFE,EAAO,SAAUK,GAEfA,EACEA,GACCnC,KAAKoC,QAAUpC,KAAKoC,OAAOC,YAC3BrC,KAAKsC,QAAUtC,KAAKsC,OAAOF,QAAUpC,KAAKsC,OAAOF,OAAOC,WAEtDF,GAA0C,qBAAxBI,sBACrBJ,EAAUI,qBAGRb,GACFA,EAAac,KAAKxC,KAAMmC,GAGtBA,GAAWA,EAAQM,uBACrBN,EAAQM,sBAAsBC,IAAId,IAKtCG,EAAQY,aAAeb,GACdJ,IACTI,EAAOD,EACH,WAAcH,EAAac,KAAKxC,KAAMA,KAAK4C,MAAMC,SAASC,aAC1DpB,GAGFI,EACF,GAAIC,EAAQE,WAAY,CAGtBF,EAAQgB,cAAgBjB,EAExB,IAAIkB,EAAiBjB,EAAQjC,OAC7BiC,EAAQjC,OAAS,SAAmCmD,EAAGd,GAErD,OADAL,EAAKU,KAAKL,GACHa,EAAeC,EAAGd,QAEtB,CAEL,IAAIe,EAAWnB,EAAQb,aACvBa,EAAQb,aAAegC,EACnB,GAAGC,OAAOD,EAAUpB,GACpB,CAACA,GAIT,MAAO,CACLsB,QAAS5B,EACTO,QAASA,GA1Fb","file":"js/chunk-640bd594.244aa5ba.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"about\"},_vm._l((_vm.posts),function(post){return _c('b-card',{key:post.id,attrs:{\"title\":post.title,\"sub-title\":\"Card subtitle\"}},[_c('b-card-text',[_vm._v(\" \"+_vm._s(post.body)+\" \")]),_c('b-link',{staticClass:\"card-link\",attrs:{\"to\":(\"post/\" + (post.id))}},[_vm._v(\"Another link\")])],1)}),1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"about\">\n    <b-card\n      v-for=\"post in posts\"\n      :key=\"post.id\"\n      :title=\"post.title\"\n      sub-title=\"Card subtitle\"\n    >\n      <b-card-text>\n        {{ post.body }}\n      </b-card-text>\n\n      <b-link :to=\"`post/${post.id}`\" class=\"card-link\">Another link</b-link>\n    </b-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      posts: []\n    };\n  },\n  beforeCreate() {\n    this.$axios.get(\"posts\").then(res => {\n      this.posts = res.data;\n    });\n  }\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Posts.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Posts.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Posts.vue?vue&type=template&id=0aea7be7&\"\nimport script from \"./Posts.vue?vue&type=script&lang=js&\"\nexport * from \"./Posts.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n"],"sourceRoot":""}