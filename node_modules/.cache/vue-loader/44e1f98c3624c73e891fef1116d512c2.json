{"remainingRequest":"E:\\vue courses\\p\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue courses\\p\\src\\pages\\main.vue?vue&type=template&id=73309bbd&","dependencies":[{"path":"E:\\vue courses\\p\\src\\pages\\main.vue","mtime":1605908207641},{"path":"E:\\vue courses\\p\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue courses\\p\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\vue courses\\p\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue courses\\p\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}