{"remainingRequest":"E:\\vue courses\\p\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\vue courses\\p\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\vue courses\\p\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue courses\\p\\src\\pages\\Aboutme.vue?vue&type=template&id=4c0e3b1e&scoped=true&","dependencies":[{"path":"E:\\vue courses\\p\\src\\pages\\Aboutme.vue","mtime":1605908202715},{"path":"E:\\vue courses\\p\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue courses\\p\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\vue courses\\p\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue courses\\p\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue courses\\p\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue courses\\p\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\vue courses\\p\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue courses\\p\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}