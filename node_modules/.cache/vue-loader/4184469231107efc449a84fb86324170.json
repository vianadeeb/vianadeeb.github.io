{"remainingRequest":"C:\\Users\\Vian A. Noori\\Documents\\vue courses\\p\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Vian A. Noori\\Documents\\vue courses\\p\\src\\pages\\main.vue?vue&type=template&id=af8ea826&","dependencies":[{"path":"C:\\Users\\Vian A. Noori\\Documents\\vue courses\\p\\src\\pages\\main.vue","mtime":1594427562541},{"path":"C:\\Users\\Vian A. Noori\\Documents\\vue courses\\p\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Vian A. Noori\\Documents\\vue courses\\p\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Vian A. Noori\\Documents\\vue courses\\p\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Vian A. Noori\\Documents\\vue courses\\p\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}